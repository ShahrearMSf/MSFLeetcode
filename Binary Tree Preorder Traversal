# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def preorderTraversal(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: List[int]
        """
        if not root:
            return []

        stack, result = [root], []
        while stack:
            node = stack.pop()
            if node:
                result.append(node.val)   # Visit root
                stack.append(node.right)  # Push right child to stack
                stack.append(node.left)   # Push left child to stack
        return result
