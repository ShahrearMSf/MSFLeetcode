class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        # Initialize a set to store characters in the current window
        char_set = set()
        # Initialize pointers and max length
        left = 0
        max_length = 0
        
        # Iterate through the string using the right pointer
        for right in range(len(s)):
            # If character at right pointer is in the set, shrink the window from the left
            while s[right] in char_set:
                char_set.remove(s[left])
                left += 1
            
            # Add the current character to the set
            char_set.add(s[right])
            # Update the maximum length
            max_length = max(max_length, right - left + 1)
        
        return max_length
