class Solution:
    def possibleStringCount(self, word: str) -> int:
        n = len(word)  # Get the length of the input word
        count = n  # Initialize count with total length (worst-case: all letters same)
        
        # Iterate through the word starting from the second character
        for i in range(1, n):
            # If current character is different from the previous one,
            # it indicates a new group, so we reduce the count
            if word[i] != word[i - 1]:
                count -= 1
        
        # Return the total number of groups (each group of same letters is one possibility)
        # +1 for the original string as is (implied in count initialization)
        return count
