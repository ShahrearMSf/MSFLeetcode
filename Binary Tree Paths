# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        def dfs(node, path, paths):
            if node:
                path += str(node.val)
                if not node.left and not node.right:  # If it's a leaf node
                    paths.append(path)  # Add the path to the list
                else:
                    path += '->'  # Add separator for the next child nodes
                    dfs(node.left, path, paths)
                    dfs(node.right, path, paths)

        paths = []
        dfs(root, '', paths)
        return paths
